model SalesOrderItems {
    id                 Int                              @unique @default(autoincrement())
    description        String?                          @db.VarChar(300)
    dykeDescription    String?                          @db.VarChar(300)
    productId          Int?
    supplier           String?
    swing              String?                          @db.VarChar(255)
    price              Float?
    tax                Float?
    taxPercenatage     Float?
    discount           Float?
    discountPercentage Float?
    meta               Json?                            @db.Json
    createdAt          DateTime?                        @default(now()) @db.Timestamp(0)
    updatedAt          DateTime?                        @updatedAt
    deletedAt          DateTime?                        @db.Timestamp(0)
    qty                Float?
    prebuiltQty        Float?
    truckLoadQty       Float?
    salesOrderId       Int
    profitMargin       Float?
    rate               Float?
    total              Float?
    salesPercentage    Float?
    prodStatus         String?                          @db.VarChar(255)
    prodStartedAt      DateTime?                        @db.Timestamp(0)
    sentToProdAt       DateTime?                        @db.Timestamp(0)
    prodCompletedAt    DateTime?                        @db.Timestamp(0)
    multiDyke          Boolean                          @default(false)
    dykeProduction     Boolean                          @default(false)
    multiDykeUid       String?
    salesOrder         SalesOrders?                     @relation(fields: [salesOrderId], references: [id], onDelete: Cascade)
    shelfItems         DykeSalesShelfItem[]
    formSteps          DykeStepForm[]
    housePackageTool   HousePackageTools?
    salesDoors         DykeSalesDoors[]
    supplies           SalesItemSupply[]
    assignments        OrderItemProductionAssignments[]
    productions        OrderProductionSubmissions[]
    itemDeliveries     OrderItemDelivery[]
    priceList          ComponentPrice[]

    @@index([createdAt, description, swing])
    @@index([salesOrderId], name: "idx_SalesOrderItems_on_salesOrderId")
}

model SalesItemControl {
    uid         String       @unique // item-1, door-234
    salesId     Int
    produceable Boolean?
    shippable   Boolean?
    sales       SalesOrders? @relation(fields: [salesId], references: [id])

    @@index([salesId])
    @@index([uid])
}

model HousePackageTools {
    id             Int                @unique @default(autoincrement())
    orderItemId    Int                @unique
    priceId        String?            @unique
    height         String?
    doorType       String?
    doorId         Int?
    dykeDoorId     Int?
    jambSizeId     Int?
    casingId       Int?
    moldingId      Int?
    stepProductId  Int?
    totalPrice     Float?             @default(0)
    totalDoors     Int?               @default(0)
    meta           Json?              @db.Json
    salesOrderId   Int
    createdAt      DateTime?          @default(now()) @db.Timestamp(0)
    updatedAt      DateTime?          @updatedAt
    deletedAt      DateTime?          @db.Timestamp(0)
    order          SalesOrders        @relation(fields: [salesOrderId], references: [id])
    salesOrderItem SalesOrderItems    @relation(fields: [orderItemId], references: [id])
    door           DykeDoors?         @relation(name: "door", fields: [dykeDoorId], references: [id])
    shelfProd      DykeShelfProducts? @relation(name: "shelfProd", fields: [doorId], references: [id])
    jambSize       DykeProducts?      @relation(name: "jamb", fields: [jambSizeId], references: [id])
    casing         DykeProducts?      @relation(name: "casing", fields: [casingId], references: [id])
    molding        DykeProducts?      @relation(name: "molding", fields: [moldingId], references: [id])
    doors          DykeSalesDoors[]
    stepProduct    DykeStepProducts?  @relation(fields: [stepProductId], references: [id])
    priceData      ComponentPrice?    @relation(fields: [priceId], references: [id], name: "moulding")

    @@index([stepProductId])
    @@index([salesOrderId])
    @@index([dykeDoorId])
    @@index([doorId])
    @@index([jambSizeId])
    @@index([casingId])
    @@index([moldingId])
}

model ComponentPrice {
    id             String             @unique
    salesItemId    Int
    salesId        Int
    qty            Float
    type           String
    baseUnitCost   Float
    baseTotalCost  Float
    salesUnitCost  Float
    salesTotalCost Float
    margin         Float              @default(1)
    salesProfit    Float
    taxPercentage  Float?
    totalTax       Float?
    grandTotal     Float?
    createdAt      DateTime?          @default(now()) @db.Timestamp(0)
    updatedAt      DateTime?          @updatedAt
    deletedAt      DateTime?          @db.Timestamp(0)
    door           DykeSalesDoors?    @relation(name: "door")
    moulding       HousePackageTools? @relation(name: "moulding")
    component      DykeStepForm?      @relation(name: "component")
    sales          SalesOrders        @relation(fields: [salesId], references: [id])
    salesItem      SalesOrderItems    @relation(fields: [salesItemId], references: [id])

    @@index([salesId])
    @@index([salesItemId])
}

model DykeSalesDoors {
    id                 Int                              @unique @default(autoincrement())
    priceId            String?                          @unique
    dimension          String
    swing              String?
    doorType           String?
    housePackageToolId Int
    doorPrice          Float? // addon price.
    jambSizePrice      Float? // total door price
    casingPrice        Float?
    unitPrice          Float?
    lhQty              Int?                             @default(0)
    rhQty              Int?                             @default(0)
    totalQty           Int                              @default(0)
    salesOrderId       Int
    lineTotal          Float?                           @default(0)
    salesOrderItemId   Int?
    stepProductId      Int?
    meta               Json?                            @db.Json
    createdAt          DateTime?                        @default(now()) @db.Timestamp(0)
    updatedAt          DateTime?                        @updatedAt
    deletedAt          DateTime?                        @db.Timestamp(0)
    housePackageTool   HousePackageTools                @relation(fields: [housePackageToolId], references: [id])
    salesOrderItem     SalesOrderItems?                 @relation(fields: [salesOrderItemId], references: [id])
    order              SalesOrders?                     @relation(fields: [salesOrderId], references: [id])
    productions        OrderItemProductionAssignments[]
    priceData          ComponentPrice?                  @relation(fields: [priceId], references: [id], name: "door")
    stepProduct        DykeStepProducts?                @relation(fields: [stepProductId], references: [id])

    @@index([housePackageToolId])
    @@index([salesOrderItemId])
    @@index([salesOrderId])
    @@index([stepProductId])
}

model DykeStepForm {
    id             Int              @unique @default(autoincrement())
    value          String?
    priceId        String?          @unique
    qty            Int?             @default(0)
    price          Float?           @default(0)
    basePrice      Float?           @default(0)
    prodUid        String?
    salesId        Int?
    salesItemId    Int?
    stepId         Int
    meta           Json?            @db.Json
    deletedAt      DateTime?        @db.Timestamp(0)
    createdAt      DateTime?        @default(now()) @db.Timestamp(0)
    updatedAt      DateTime?        @updatedAt
    sales          SalesOrders?     @relation(fields: [salesId], references: [id])
    salesOrderItem SalesOrderItems? @relation(fields: [salesItemId], references: [id])
    step           DykeSteps        @relation(fields: [stepId], references: [id])
    priceData      ComponentPrice?  @relation(fields: [priceId], references: [id], name: "component")

    @@index([salesId])
    @@index([salesItemId])
    @@index([stepId])
}

model DykeSteps {
    id              Int                 @unique @default(autoincrement())
    title           String?
    uid             String?
    value           String?             @db.Text
    createdAt       DateTime?           @default(now()) @db.Timestamp(0)
    updatedAt       DateTime?           @updatedAt
    stepProducts    DykeStepProducts[]
    stepValueId     Int?
    rootStepValueId Int?
    prevStepValueId Int?
    stepForms       DykeStepForm[]
    priceSystem     DykePricingSystem[]
    meta            Json?               @db.Json
    deletedAt       DateTime?           @db.Timestamp(0)
    rootStepValue   DykeStepValues?     @relation(fields: [rootStepValueId], references: [id], name: "rootValue")
    stepValue       DykeStepValues?     @relation(fields: [stepValueId], references: [id], name: "stepValue")
    prevStepValue   DykeStepValues?     @relation(fields: [prevStepValueId], references: [id], name: "prevStepValue")

    @@index([rootStepValueId])
    @@index([stepValueId])
    @@index([prevStepValueId])
}

model DykeStepValues {
    id        Int         @unique @default(autoincrement())
    title     String?
    createdAt DateTime?   @default(now()) @db.Timestamp(0)
    updatedAt DateTime?   @updatedAt
    deletedAt DateTime?   @db.Timestamp(0)
    rootSteps DykeSteps[] @relation(name: "rootValue")
    steps     DykeSteps[] @relation(name: "stepValue")
    prevStep  DykeSteps[] @relation(name: "prevStepValue")
}

model DykeCategories {
    id        Int            @unique @default(autoincrement())
    title     String         @unique
    createdAt DateTime?      @default(now()) @db.Timestamp(0)
    updatedAt DateTime?      @updatedAt
    deletedAt DateTime?      @db.Timestamp(0)
    products  DykeProducts[]
}

model DykeStepProducts {
    id                Int                 @unique @default(autoincrement())
    uid               String?             @unique
    productCode       String?
    name              String?
    img               String?
    redirectUid       String?
    custom            Boolean?            @default(false)
    sortIndex         Int?
    dykeProductId     Int?
    doorId            Int?
    dykeStepId        Int
    nextStepId        Int?
    housePackageTools HousePackageTools[]
    meta              Json?               @db.Json
    createdAt         DateTime?           @default(now()) @db.Timestamp(0)
    updatedAt         DateTime?           @updatedAt
    deletedAt         DateTime?           @db.Timestamp(0)
    product           DykeProducts?       @relation(fields: [dykeProductId], references: [id])
    door              DykeDoors?          @relation(fields: [doorId], references: [id])
    salesDoors        DykeSalesDoors[]
    step              DykeSteps           @relation(fields: [dykeStepId], references: [id])

    @@index([dykeStepId])
    @@index([dykeProductId])
}

model DykePricingSystem {
    id              Int        @unique @default(autoincrement())
    dykeStepId      Int
    dependenciesUid String? //"isdu-ewr-423-dfr23" depencies uid = stepProductUids
    stepProductUid  String
    price           Float
    createdAt       DateTime?  @default(now()) @db.Timestamp(0)
    updatedAt       DateTime?  @updatedAt
    deletedAt       DateTime?  @db.Timestamp(0)
    step            DykeSteps? @relation(fields: [dykeStepId], references: [id])
}

model DykeDoors {
    id                Int                 @unique @default(autoincrement())
    query             String?
    doorType          String? //GARAGE DOOR
    title             String
    img               String?
    price             Float?
    meta              Json?               @db.Json
    createdAt         DateTime?           @default(now()) @db.Timestamp(0)
    updatedAt         DateTime?           @updatedAt
    deletedAt         DateTime?           @db.Timestamp(0)
    housePackageTools HousePackageTools[] @relation(name: "door")
    stepProducts      DykeStepProducts[]
}

model DykeProducts {
    id                      Int                 @unique @default(autoincrement())
    img                     String?
    description             String?
    noteRequired            Boolean?            @default(false)
    custom                  Boolean?
    title                   String?
    price                   Float?
    categoryId              Int?
    productCode             String?
    qty                     Int?                @default(0)
    meta                    Json?               @db.Json
    value                   String
    createdAt               DateTime?           @default(now()) @db.Timestamp(0)
    updatedAt               DateTime?           @updatedAt
    deletedAt               DateTime?           @db.Timestamp(0)
    stepProducts            DykeStepProducts[]
    category                DykeCategories?     @relation(fields: [categoryId], references: [id])
    jambHousePackageTools   HousePackageTools[] @relation(name: "jamb")
    casingHousePackageTools HousePackageTools[] @relation(name: "casing")
    moldingHousePkgTools    HousePackageTools[] @relation(name: "molding")

    @@index([categoryId])
}

model DykeProductPrices {
    id        Int       @unique @default(autoincrement())
    price     Float
    dimension String // 1-0 x 6-7
    type      String // door, jamb, casing
    productId Int
    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)
}

model DykeShelfCategories {
    id   Int    @unique @default(autoincrement())
    name String
    type String //parent/child

    categoryId       Int?
    parentCategoryId Int?
    products         DykeShelfProducts[]  @relation(name: "childCategory")
    groupedProducts  DykeShelfProducts[]  @relation(name: "parentCategory")
    shelfItems       DykeSalesShelfItem[]
    createdAt        DateTime?            @default(now()) @db.Timestamp(0)
    updatedAt        DateTime?            @updatedAt
    deletedAt        DateTime?            @db.Timestamp(0)
}

model DykeShelfProducts {
    id                Int                  @unique @default(autoincrement())
    title             String
    unitPrice         Float?
    categoryId        Int?
    parentCategoryId  Int?
    img               String?
    meta              Json?                @db.Json
    createdAt         DateTime?            @default(now()) @db.Timestamp(0)
    updatedAt         DateTime?            @updatedAt
    deletedAt         DateTime?            @db.Timestamp(0)
    category          DykeShelfCategories? @relation(name: "childCategory", fields: [categoryId], references: [id])
    parentCategory    DykeShelfCategories? @relation(name: "parentCategory", fields: [parentCategoryId], references: [id])
    orderItems        DykeSalesShelfItem[]
    housePackageTools HousePackageTools[]  @relation(name: "shelfProd")

    // @@fulltext([title])

    @@index([categoryId])
    @@index([parentCategoryId])
}

model DykeSalesError {
    id         Int       @unique @default(autoincrement())
    errorId    String
    userId     Int
    restoredAt DateTime?
    meta       Json?     @db.Json
    deletedAt  DateTime? @db.Timestamp(0)
    createdAt  DateTime? @default(now()) @db.Timestamp(0)
    updatedAt  DateTime? @updatedAt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model SalesOrders {
    id                Int                              @unique @default(autoincrement())
    title             String?                          @db.VarChar(255)
    customerId        Int?
    billingAddressId  Int?
    shippingAddressId Int?
    salesRepId        Int?
    pickupId          Int?
    prodId            Int?
    isDyke            Boolean?                         @default(false)
    summary           String?                          @db.Text
    instruction       String?                          @db.Text
    meta              Json?                            @db.Json
    status            String?                          @db.VarChar(255)
    inventoryStatus   String?                          @db.VarChar(255)
    deletedAt         DateTime?                        @db.Timestamp(0)
    createdAt         DateTime?                        @default(now()) @db.Timestamp(0)
    updatedAt         DateTime?                        @updatedAt
    orderId           String                           @db.VarChar(255)
    slug              String                           @db.VarChar(255)
    type              String?                          @db.VarChar(255)
    goodUntil         DateTime?
    paymentTerm       String?
    prodQty           Float?
    builtQty          Float?
    subTotal          Float?
    profitMargin      Float?
    tax               Float?
    taxPercentage     Float?
    grandTotal        Float?
    amountDue         Float?
    invoiceStatus     String?                          @db.VarChar(255)
    prodStatus        String?                          @db.VarChar(255)
    prodDueDate       DateTime?                        @db.Timestamp(0)
    paymentDueDate    DateTime?                        @db.Timestamp(0)
    deliveredAt       DateTime?
    deliveryOption    String?
    customerProfileId Int?
    taxes             SalesTaxes[]
    checkouts         SalesCheckout[]
    refunds           Refunds[]                        @relation(name: "salesRefunds")
    refund            Refunds?                         @relation(name: "refund")
    customer          Customers?                       @relation(fields: [customerId], references: [id])
    items             SalesOrderItems[]
    shippingAddress   AddressBooks?                    @relation(name: "shippingAddress", fields: [shippingAddressId], references: [id])
    billingAddress    AddressBooks?                    @relation(name: "billingAddress", fields: [billingAddressId], references: [id])
    producer          Users?                           @relation(name: "producer", fields: [prodId], references: [id])
    salesRep          Users?                           @relation(name: "salesRep", fields: [salesRepId], references: [id])
    payments          SalesPayments[]                  @relation(name: "salesPayment")
    productions       OrderProductionSubmissions[]
    pickup            SalesPickup?                     @relation(fields: [pickupId], references: [id])
    supplies          SalesItemSupply[]
    commisions        SalesCommision[]
    formSteps         DykeStepForm[]
    housePackageTools HousePackageTools[]
    doors             DykeSalesDoors[]
    itemDeliveries    OrderItemDelivery[]
    deliveries        OrderDelivery[]
    assignments       OrderItemProductionAssignments[]
    pricings          ComponentPrice[]
    requests          DealerSalesRequest[]
    stat              SalesStat[]
    salesProfile      CustomerTypes?                   @relation(fields: [customerProfileId], references: [id])
    itemControls      SalesItemControl[]

    @@unique([orderId, type])
    @@index([createdAt, deletedAt, orderId, grandTotal, prodId, type, prodDueDate])
    @@index([customerProfileId])
    @@index([customerId])
    @@index([shippingAddressId])
    @@index([billingAddressId])
    @@index([prodId])
    @@index([salesRepId])
    @@index([pickupId])
}

// model Refunds {

// }
model SalesTaxes {
    id        String      @id @default(cuid())
    sale      SalesOrders @relation(fields: [salesId], references: [id])
    salesId   Int
    taxCode   String
    taxxable  Float
    tax       Float       @default(0)
    createdAt DateTime?   @default(now()) @db.Timestamp(0)
    updatedAt DateTime?   @updatedAt
    deletedAt DateTime?   @db.Timestamp(0)

    taxConfig Taxes? @relation(fields: [taxCode], references: [taxCode])

    @@index([salesId])
    @@index([taxCode])
}

model Taxes {
    title      String
    taxCode    String       @unique
    percentage Float        @default(0.00)
    taxOn      String       @default("total") //total, first 50000 
    createdAt  DateTime?    @default(now()) @db.Timestamp(0)
    updatedAt  DateTime?    @updatedAt
    deletedAt  DateTime?    @db.Timestamp(0)
    salesTaxes SalesTaxes[]
}

model SalesStat {
    id         Int         @unique @default(autoincrement())
    salesId    Int
    status     String?
    type       String // production, dispatch, payment
    score      Float?
    total      Float?
    percentage Float?
    sales      SalesOrders @relation(fields: [salesId], references: [id])
    createdAt  DateTime?   @default(now()) @db.Timestamp(0)
    updatedAt  DateTime?   @updatedAt
    deletedAt  DateTime?   @db.Timestamp(0)

    @@index([salesId])
}

model SalesNote {
    id            Int  @unique @default(autoincrement())
    noteId        Int  @unique
    replyToNoteId Int? @unique

    salesId      Int
    salesItemId  Int?
    assignmentId Int?
    deliveryId   Int?

    note       Note      @relation(name: "salesNote", fields: [noteId], references: [id])
    replyNote  Note?     @relation(name: "replySalesNote", fields: [replyToNoteId], references: [id])
    resolvedAt DateTime? @db.Timestamp(0)
    deletedAt  DateTime? @db.Timestamp(0)
    createdAt  DateTime? @default(now()) @db.Timestamp(0)
    updatedAt  DateTime? @updatedAt
}
